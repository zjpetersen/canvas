var MosaicMarket = artifacts.require("MosaicMarket");

 const SECTION_ID_INVALID = 7056;
 const PRICE_1 = "500000000000000000"; //.5 ether
 const PRICE_2 = "3000000000000000000"; //3 ether
 const PRICE_3 = "100000000000000000"; //.1 ether

const getColor = () => {
   let buffer = new ArrayBuffer();
   let expectedColor = new Int8Array(buffer);
   expectedColor = Int8Array.from([-119,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,-13,-1,97,0,0,0,1,115,82,71,66,0,-82,-50,28,-23,0,0,0,-105,73,68,65,84,56,-115,99,-116,-50,123,-8,-97,-127,-127,-127,-31,-8,-90,96,6,116,96,-23,-73,22,-85,56,76,-114,-127,-127,-127,-127,9,-97,-26,39,23,39,-61,21,-94,3,-104,30,38,92,54,16,3,-114,111,10,-122,-72,0,-101,-19,28,-70,114,12,12,12,12,120,93,-63,-64,-64,-128,-35,0,82,0,-122,1,-56,-74,-61,0,62,87,80,-41,5,-40,108,39,-28,10,-22,-70,-32,-8,-90,96,-122,31,-105,31,97,85,40,-93,-97,-117,53,-67,80,63,22,-80,-71,2,-105,-19,-76,113,1,-70,43,-16,-39,-50,-64,-64,-64,-64,-124,47,-103,18,2,-106,126,107,33,46,-64,102,-56,-15,77,-63,120,109,-121,-23,1,0,-49,1,65,-55,-123,46,20,72,0,0,0,0,73,69,78,68,-82,66,96,-126]);
   expectedColor2 = Int8Array.from([-119,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,-13,-1,97,0,0,0,1,115,82,71,66,0,-82,-50,28,-23,0,0,1,-8,73,68,65,84,56,-115,-123,-109,65,-120,18,97,20,-57,127,78,30,-10,-46,49,99,97,89,-106,-112,13,-124,-59,75,34,19,8,59,-121,32,115,25,22,-25,80,-32,37,-88,-21,68,-80,-106,-31,68,65,-76,-94,-31,66,48,-57,46,123,-56,-61,30,-66,16,105,50,48,48,88,80,100,78,67,18,-76,120,-80,16,4,61,118,-23,-108,29,116,62,92,-45,-6,95,30,-33,-5,-34,123,-1,-9,-2,-17,-5,2,-103,7,-33,39,0,-67,-19,35,-58,-27,22,-105,-78,-41,-91,13,-97,29,44,-11,-113,-53,45,84,93,0,-96,0,-76,107,6,-57,-61,-67,-65,-110,7,-98,77,-8,-20,0,39,83,96,92,110,73,11,-16,-12,-30,-73,105,-127,-34,-10,17,0,119,-41,-33,-53,-28,-29,-31,30,-13,72,85,-14,-104,-71,16,-59,116,-124,-124,-88,-50,18,79,104,-41,12,-108,59,23,122,0,-52,-37,-105,63,-81,-78,-74,-77,9,-64,-64,-77,81,117,-127,93,26,-111,127,-11,-100,83,99,31,-128,100,-57,3,32,104,-105,70,104,-106,75,23,48,115,41,-20,-46,8,85,103,41,62,-20,14,49,119,67,116,-125,14,-39,126,-125,98,58,66,-32,-34,-101,-55,-92,121,24,-109,65,-86,46,36,123,-17,-19,35,-23,-33,-120,-102,-76,107,6,102,46,4,64,55,-24,-48,60,-116,17,-52,-10,27,52,-127,122,60,42,-37,-6,23,110,125,94,-97,-59,77,73,3,87,-74,-82,77,18,-94,-54,-87,-79,127,-114,125,-79,-125,-7,46,0,52,-53,37,-37,111,-96,56,-103,-62,127,89,23,-31,-113,-111,-86,-28,81,-118,-23,-120,84,-74,93,51,-8,-11,-27,-57,-46,36,-97,61,33,-86,-40,-91,17,-39,126,3,0,-27,-55,-69,-81,0,56,-103,-126,-84,-68,10,78,-90,32,-55,62,110,-68,38,33,-86,83,13,52,-53,-59,-33,68,61,30,-27,-59,-27,103,-84,-19,108,74,13,22,103,127,-4,-23,-66,20,92,49,115,33,-102,-121,49,52,-53,69,-77,-36,-107,-101,-88,-57,-93,-8,68,-55,-114,71,61,30,5,102,91,-104,95,-95,-103,11,-51,30,-109,96,-32,-39,-25,-40,-3,49,-54,91,55,-28,57,-88,-22,-126,-28,-20,-127,-36,28,60,36,85,-54,-81,-20,-32,119,-8,54,-87,74,-98,122,-4,-124,100,-57,67,-43,5,1,-1,59,-73,107,6,-102,-27,2,72,61,84,93,72,-1,-4,-36,-2,29,-64,31,-83,-17,-19,81,-59,-3,8,-16,0,0,0,0,73,69,78,68,-82,66,96,-126]);
   expectedColor3 = Int8Array.from([-119,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,-13,-1,97,0,0,0,1,115,82,71,66,0,-82,-50,28,-23,0,0,0,-87,73,68,65,84,56,-115,99,-76,-73,47,-7,-49,64,1,96,97,96,96,96,80,-119,-23,38,75,-13,-99,37,-91,16,3,-112,5,-112,-127,118,-3,30,6,6,6,6,-122,-85,-115,46,40,-30,-56,22,50,33,107,38,-58,37,42,49,-35,40,22,49,33,75,18,50,4,93,51,-122,1,-8,12,-63,-90,25,-85,1,-40,12,-63,-91,-103,-127,-127,1,17,-120,-80,0,67,0,67,56,-117,93,-39,-112,65,-69,30,85,-10,-25,93,60,46,32,5,-64,93,-128,45,-86,-40,-107,13,-95,-74,-99,-57,-16,-126,74,12,30,23,-96,-5,25,95,-20,96,24,-128,43,-64,112,25,-126,98,0,-66,-48,-58,101,8,-36,0,66,-102,113,25,-126,-110,23,-48,77,-121,69,21,44,-64,-80,1,70,74,-77,51,0,0,99,76,-8,-64,11,-101,-97,0,0,0,0,73,69,78,68,-82,66,96,-126]);
   let hex = '0x';
   hex += Array.from(expectedColor2, function(byte) {
    return ('0' + (byte & 0xFF).toString(16)).slice(-2);
  }).join('');

  return hex;
}

module.exports = async function(done) {
    console.log("Getting deployed version of Canvas...");
    const accounts = await web3.eth.getAccounts();
    const canvas = await MosaicMarket.deployed();

    const color = getColor();
    for (let sectionId = 0; sectionId < SECTION_ID_INVALID; sectionId++) {
      console.log("Assigning section: " + sectionId);
      try {
        await canvas.getSectionForFree(sectionId, {from: accounts[0]});
        await canvas.setColorBytes(sectionId, color, {from: accounts[0]});
      } catch (error) {
          console.log("Could not assign color for section " + sectionId);
          console.log(error);
      }
    }
    
    done();
    
};